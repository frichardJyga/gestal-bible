name: Secure Fetch File from SharePoint

on:
  repository_dispatch:
    types: [new-file-added]

jobs:
  add-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: sharepoint

      - name: Setup certificate
        id: setup_cert
        env:
          AZURE_CERT_PFX_BASE64: ${{ secrets.AZURE_CERT_PFX_BASE64 }}
          AZURE_CERT_PASSWORD: ${{ secrets.AZURE_CERT_PASSWORD }}
        run: |
          echo "${AZURE_CERT_PFX_BASE64}" | base64 -d > JygaSharepoint.pfx
          openssl pkcs12 -in JygaSharepoint.pfx -out JygaSharepoint.pem -passin pass:${AZURE_CERT_PASSWORD} -nodes

      - name: Install PnP PowerShell
        run: |
          Install-Module -Name PnP.PowerShell -Force -Scope CurrentUser
          Import-Module PnP.PowerShell

      - name: Obtain SharePoint Access Token
        id: get_token
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CERT_PASSWORD: ${{ secrets.AZURE_CERT_PASSWORD }}
        run: |
          $certPath = Join-Path $env:GITHUB_WORKSPACE 'JygaSharepoint.pfx'
          $thumbprint = (Get-PfxCertificate -FilePath $certPath -Password (ConvertTo-SecureString -String $env:AZURE_CERT_PASSWORD -AsPlainText -Force)).Thumbprint
          $securePassword = ConvertTo-SecureString -String $env:AZURE_CERT_PASSWORD -AsPlainText -Force
          Connect-PnPOnline -Url "https://<YourSharePointSite>.sharepoint.com" -ClientId $env:AZURE_CLIENT_ID -Thumbprint $thumbprint -Tenant $env:AZURE_TENANT_ID -CertificatePath $certPath -CertificatePassword $securePassword

      - name: Download file from SharePoint
        env:
          SHAREPOINT_TOKEN: ${{ steps.get_token.outputs.access_token }}
        run: |
          $filePath = "docs/.vuepress/public/doc/${{ github.event.client_payload.github_folder_path }}/${{ github.event.client_payload.file_name -replace ' ', '-' }}"
          Get-PnPFile -Url "/sites/TestBibliothque/${{ github.event.client_payload.sharepoint_folder_path }}/${{ github.event.client_payload.file_name }}" -Path $filePath -FileName $filePath -AsFile
          git add .
          git commit -m "Add new file from SharePoint"

      - name: Push changes
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          git config --unset-all http.https://github.com/.extraheader || true
          git config --global http.extraheader "AUTHORIZATION: basic $(echo -n x-access-token:${ACTIONS_PAT} | base64 --wrap=0)"
          git push origin sharepoint

      - name: Create Pull Request
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
        run: |
          PR_TITLE="Add new file: $RENAMED_FILE_NAME"
          PR_BODY="This PR adds $RENAMED_FILE_NAME in : $GITHUB_PATH."
          BASE_BRANCH="main"
          HEAD_BRANCH="sharepoint"
          curl -X POST -H "Authorization: token ${ACTIONS_PAT}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/frichardJyga/gestal-bible/pulls -d '{"title":"'"${PR_TITLE}"'","body":"'"${PR_BODY}"'","head":"'"${HEAD_BRANCH}"'","base":"'"${BASE_BRANCH}"'"}'
